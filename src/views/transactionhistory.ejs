<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Transaction History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .main-container {
            background: white;
            min-height: 100vh;
            border-radius: 20px 20px 0 0;
            margin-top: 20px;
            box-shadow: 0 -5px 20px rgba(0, 0, 0, 0.1);
        }

        .header-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 20px 20px 0 0;
            position: relative;
        }

        .back-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
        }

        .header-title {
            text-align: center;
            font-size: 20px;
            font-weight: 600;
            margin: 0;
        }

        .filter-section {
            padding: 20px;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .filter-tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
            overflow-x: auto;
            padding-bottom: 5px;
        }

        .filter-tab {
            background: white;
            border: 2px solid #e9ecef;
            color: #6c757d;
            padding: 8px 16px;
            border-radius: 20px;
            cursor: pointer;
            white-space: nowrap;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .filter-tab.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-color: transparent;
        }

        .date-filter {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
        }

        .date-filter input {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 8px 12px;
            font-size: 14px;
        }

        .transaction-list {
            padding: 20px;
        }

        .transaction-item {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            padding: 16px;
            margin-bottom: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            transition: transform 0.2s ease;
        }

        .transaction-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .transaction-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 12px;
        }

        .transaction-type {
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
            font-size: 16px;
        }

        .transaction-amount {
            font-weight: 700;
            font-size: 18px;
        }

        .amount-positive {
            color: #28a745;
        }

        .amount-negative {
            color: #dc3545;
        }

        .transaction-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 8px;
            font-size: 14px;
            color: #6c757d;
        }

        .detail-item {
            display: flex;
            justify-content: space-between;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-success {
            background: #d4edda;
            color: #155724;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-failed {
            background: #f8d7da;
            color: #721c24;
        }

        .loading {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }

        .no-data {
            text-align: center;
            padding: 60px 20px;
            color: #6c757d;
        }

        .no-data i {
            font-size: 48px;
            margin-bottom: 16px;
            opacity: 0.5;
        }

        .load-more-btn {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 12px;
            border-radius: 8px;
            font-weight: 600;
            margin-top: 20px;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 12px;
            margin-bottom: 20px;
        }

        .summary-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 16px;
            border-radius: 12px;
            text-align: center;
        }

        .summary-card h6 {
            margin: 0 0 8px 0;
            font-size: 14px;
            opacity: 0.9;
        }

        .summary-card .amount {
            font-size: 18px;
            font-weight: 700;
            margin: 0;
        }

        @media (max-width: 768px) {
            .transaction-details {
                grid-template-columns: 1fr;
            }
            
            .date-filter {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>

<body>
    <div class="container-fluid p-0">
        <div class="main-container">
            <!-- Header -->
            <div class="header-section">
                <button class="back-btn" onclick="window.history.back()">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <h1 class="header-title">Transaction History</h1>
            </div>

            <!-- Summary Cards -->
            <div class="summary-cards" style="padding: 20px; padding-bottom: 0;">
                <div class="summary-card">
                    <h6>Total Deposits</h6>
                    <p class="amount" id="total-deposits">₹0</p>
                </div>
                <div class="summary-card">
                    <h6>Total Withdrawals</h6>
                    <p class="amount" id="total-withdrawals">₹0</p>
                </div>
                <div class="summary-card">
                    <h6>P2P Transfers</h6>
                    <p class="amount" id="total-transfers">₹0</p>
                </div>
            </div>

            <!-- Filter Section -->
            <div class="filter-section">
                <div class="filter-tabs">
                    <div class="filter-tab active" data-type="all">All</div>
                    <div class="filter-tab" data-type="deposit">Deposits</div>
                    <div class="filter-tab" data-type="withdrawal">Withdrawals</div>
                    <div class="filter-tab" data-type="transfer_sent">P2P Sent</div>
                    <div class="filter-tab" data-type="transfer_received">P2P Received</div>
                </div>
                <div class="date-filter">
                    <input type="date" id="start-date" />
                    <span>to</span>
                    <input type="date" id="end-date" />
                    <button onclick="applyDateFilter()" class="btn btn-sm btn-primary">Filter</button>
                    <button onclick="clearFilters()" class="btn btn-sm btn-outline-secondary">Clear</button>
                </div>
            </div>

            <!-- Transaction List -->
            <div class="transaction-list" id="transaction-list">
                <div class="loading">
                    <i class="fas fa-spinner fa-spin fa-2x"></i>
                    <p>Loading transactions...</p>
                </div>
            </div>

            <!-- Load More Button -->
            <div style="padding: 0 20px 20px;">
                <button id="load-more" class="load-more-btn" style="display: none;" onclick="loadMore()">
                    Load More Transactions
                </button>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentPage = 1;
        let currentFilter = 'all';
        let startDate = '';
        let endDate = '';
        let allTransactions = [];
        let hasMoreData = true;

        $(document).ready(function() {
            loadTransactions();
            setupEventListeners();
        });

        function setupEventListeners() {
            // Filter tabs
            $('.filter-tab').click(function() {
                $('.filter-tab').removeClass('active');
                $(this).addClass('active');
                currentFilter = $(this).data('type');
                currentPage = 1;
                allTransactions = [];
                loadTransactions();
            });
        }

        function loadTransactions(append = false) {
            if (!append) {
                $('#transaction-list').html(`
                    <div class="loading">
                        <i class="fas fa-spinner fa-spin fa-2x"></i>
                        <p>Loading transactions...</p>
                    </div>
                `);
            }

            const params = {
                page: currentPage,
                limit: 20,
                type: currentFilter,
                startDate: startDate,
                endDate: endDate
            };

            $.ajax({
                type: "GET",
                url: "/api/webapi/transactionHistory",
                data: params,
                dataType: "json",
                success: function(response) {
                    if (response.status) {
                        if (append) {
                            allTransactions = allTransactions.concat(response.data);
                        } else {
                            allTransactions = response.data;
                        }
                        
                        displayTransactions(allTransactions);
                        updateSummary(allTransactions);
                        
                        // Handle pagination
                        hasMoreData = response.pagination && response.pagination.hasNext;
                        if (hasMoreData) {
                            $('#load-more').show();
                        } else {
                            $('#load-more').hide();
                        }
                    } else {
                        $('#transaction-list').html(`
                            <div class="no-data">
                                <i class="fas fa-exclamation-triangle"></i>
                                <h5>Failed to load transactions</h5>
                                <p>${response.message || 'Please try again later'}</p>
                            </div>
                        `);
                    }
                },
                error: function() {
                    $('#transaction-list').html(`
                        <div class="no-data">
                            <i class="fas fa-wifi"></i>
                            <h5>Connection Error</h5>
                            <p>Please check your internet connection and try again</p>
                        </div>
                    `);
                }
            });
        }

        function displayTransactions(transactions) {
            if (!transactions || transactions.length === 0) {
                $('#transaction-list').html(`
                    <div class="no-data">
                        <i class="fas fa-receipt"></i>
                        <h5>No Transactions Found</h5>
                        <p>Your transaction history will appear here</p>
                    </div>
                `);
                return;
            }

            let html = transactions.map(transaction => {
                const isPositive = transaction.transaction_type === 'deposit' || transaction.transaction_type === 'transfer_received';
                const amountClass = isPositive ? 'amount-positive' : 'amount-negative';
                const amountPrefix = isPositive ? '+' : '-';

                let icon, typeText, statusClass, statusText;

                switch(transaction.transaction_type) {
                    case 'deposit':
                        icon = 'fas fa-plus-circle';
                        typeText = 'Deposit';
                        break;
                    case 'withdrawal':
                        icon = 'fas fa-minus-circle';
                        typeText = 'Withdrawal';
                        break;
                    case 'transfer_sent':
                        icon = 'fas fa-paper-plane';
                        typeText = 'P2P Sent';
                        break;
                    case 'transfer_received':
                        icon = 'fas fa-hand-holding-usd';
                        typeText = 'P2P Received';
                        break;
                    default:
                        icon = 'fas fa-exchange-alt';
                        typeText = 'Transaction';
                }

                // Status handling
                switch(parseInt(transaction.status)) {
                    case 1:
                        statusClass = 'status-success';
                        statusText = 'Success';
                        break;
                    case 0:
                        statusClass = 'status-pending';
                        statusText = 'Pending';
                        break;
                    case 2:
                        statusClass = 'status-failed';
                        statusText = 'Failed';
                        break;
                    default:
                        statusClass = 'status-pending';
                        statusText = 'Unknown';
                }

                const date = new Date(transaction.transaction_date);
                const formattedDate = date.toLocaleDateString('en-IN');
                const formattedTime = date.toLocaleTimeString('en-IN', { hour: '2-digit', minute: '2-digit' });

                return `
                    <div class="transaction-item">
                        <div class="transaction-header">
                            <div class="transaction-type">
                                <i class="${icon}"></i>
                                <span>${typeText}</span>
                            </div>
                            <div class="transaction-amount ${amountClass}">
                                ${amountPrefix}₹${parseFloat(transaction.amount).toFixed(2)}
                            </div>
                        </div>
                        <div class="transaction-details">
                            <div class="detail-item">
                                <span>Status:</span>
                                <span class="status-badge ${statusClass}">${statusText}</span>
                            </div>
                            <div class="detail-item">
                                <span>Date:</span>
                                <span>${formattedDate}</span>
                            </div>
                            <div class="detail-item">
                                <span>Time:</span>
                                <span>${formattedTime}</span>
                            </div>
                            <div class="detail-item">
                                <span>Method:</span>
                                <span>${transaction.payment_method || 'N/A'}</span>
                            </div>
                            ${transaction.id_order ? `
                            <div class="detail-item">
                                <span>Order ID:</span>
                                <span style="font-family: monospace; font-size: 12px;">${transaction.id_order}</span>
                            </div>
                            ` : ''}
                            ${transaction.utr && transaction.utr !== 'NULL' ? `
                            <div class="detail-item">
                                <span>${transaction.transaction_type.includes('transfer') ? 'Phone:' : 'UTR:'}</span>
                                <span style="font-family: monospace; font-size: 12px;">${transaction.utr}</span>
                            </div>
                            ` : ''}
                        </div>
                    </div>
                `;
            }).join('');

            $('#transaction-list').html(html);
        }

        function updateSummary(transactions) {
            let totalDeposits = 0;
            let totalWithdrawals = 0;
            let totalTransfers = 0;

            transactions.forEach(transaction => {
                const amount = parseFloat(transaction.amount);
                switch(transaction.transaction_type) {
                    case 'deposit':
                        if (parseInt(transaction.status) === 1) {
                            totalDeposits += amount;
                        }
                        break;
                    case 'withdrawal':
                        if (parseInt(transaction.status) === 1) {
                            totalWithdrawals += amount;
                        }
                        break;
                    case 'transfer_sent':
                    case 'transfer_received':
                        totalTransfers += amount;
                        break;
                }
            });

            $('#total-deposits').text(`₹${totalDeposits.toFixed(2)}`);
            $('#total-withdrawals').text(`₹${totalWithdrawals.toFixed(2)}`);
            $('#total-transfers').text(`₹${totalTransfers.toFixed(2)}`);
        }

        function loadMore() {
            if (hasMoreData) {
                currentPage++;
                loadTransactions(true);
            }
        }

        function applyDateFilter() {
            startDate = $('#start-date').val();
            endDate = $('#end-date').val();
            currentPage = 1;
            allTransactions = [];
            loadTransactions();
        }

        function clearFilters() {
            $('#start-date').val('');
            $('#end-date').val('');
            startDate = '';
            endDate = '';
            currentPage = 1;
            allTransactions = [];
            loadTransactions();
        }
    </script>
</body>
</html>
